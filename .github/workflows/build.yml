name: Build Docker Images

on:
  release:
    types: [published]

env:
  IMAGE_NAME: "${{ secrets.DOCKER_HOME_HOST }}/mediclab/beautiful_inno_bot"

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-24.04, ubuntu-24.04-arm]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Get version from Cargo.toml
        run: |
          echo "app_version=$(cat Cargo.toml | grep -A3 '^\[package\]$' | grep -Po '(?<=^version = ")[^"]*(?=".*)')" >> $GITHUB_ENV

      - name: Set versions to env
        run: |
          echo "check_version=$(echo ${{ env.app_version }} | tr -dc 0-9)"  >> $GITHUB_ENV
          echo "tag_version=$(echo ${{ github.event.release.tag_name }} | tr -dc 0-9)" >> $GITHUB_ENV

      - name: Check versions
        if: ${{ env.tag_version != env.check_version }}
        run: |
          echo "::error::Tag version = ${{ env.tag_version }} is not equals version from Cargo.toml = ${{ env.check_version }}"
          exit 1

      - name: Login to Private Docker
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_HOME_HOST }}
          username: ${{ secrets.DOCKER_HOME_LOGIN }}
          password: ${{ secrets.DOCKER_HOME_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          file: ./Dockerfile-prod
          build-args: "BOT_VERSION=${{ env.app_version }}"
          push: true
          tags: "${{ env.IMAGE_NAME }}:latest,${{ env.IMAGE_NAME }}:${{ env.app_version }}"

      - name: Curl for update stack on server
        continue-on-error: true
        run: |
          curl -fs -X POST ${{ secrets.CURL_WEBHOOK_URL }}