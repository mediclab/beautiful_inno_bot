name: Build Docker Images

on:
  release:
    types: [published]

env:
  IMAGE_NAME: "${{ secrets.DOCKER_HOME_HOST }}/mediclab/beautiful_inno_bot"

jobs:
  build-image:
    strategy:
      fail-fast: false
      matrix:
        os:
          - name: ubuntu-24.04
            platform: linux/amd64
          - name: ubuntu-24.04-arm
            platform: linux/arm64

    runs-on: ${{ matrix.os.name }}
    steps:
      - uses: actions/checkout@v4

      - name: Set environment
        run: |
          echo "app_version=$(cat Cargo.toml | grep -A3 '^\[package\]$' | grep -Po '(?<=^version = ")[^"]*(?=".*)' | tr -dc 0-9)"  >> $GITHUB_ENV
          echo "tag_version=$(echo ${{ github.event.release.tag_name }} | tr -dc 0-9)" >> $GITHUB_ENV
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV 

      - name: Check versions
        if: ${{ env.tag_version != env.app_version }}
        run: |
          echo "::error::Tag version = ${{ env.tag_version }} is not equals version from Cargo.toml = ${{ env.app_version }}"
          exit 1

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.IMAGE_NAME }}

      - name: Login to Private Docker
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_HOME_HOST }}
          username: ${{ secrets.DOCKER_HOME_LOGIN }}
          password: ${{ secrets.DOCKER_HOME_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v6
        with:
          file: ./Dockerfile-prod
          build-args: "BOT_VERSION=${{ env.app_version }}"
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.IMAGE_NAME }},push-by-digest=true,name-canonical=true,push=true
#          tags: "${{ env.IMAGE_NAME }}:latest,${{ env.IMAGE_NAME }}:${{ env.app_version }}"
          platforms: ${{ matrix.os.platform }}
#          outputs: type=docker,dest=${{ runner.temp }}/image-${{ matrix.os }}.tar

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"          

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs:
      - build-image
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-*
          merge-multiple: true

      - name: Login to Private Docker
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_HOME_HOST }}
          username: ${{ secrets.DOCKER_HOME_LOGIN }}
          password: ${{ secrets.DOCKER_HOME_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}            

      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.IMAGE_NAME }}@sha256:%s ' *)       

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}

#      - name: Upload artifact
#        uses: actions/upload-artifact@v4
#        with:
#          name: image-${{ matrix.os }}
#          path: ${{ runner.temp }}/image-${{ matrix.os }}.tar
#
#  load-images:
#    runs-on: ubuntu-22.04
#    needs: build-image
#    steps:
#      - name: Login to Private Docker
#        uses: docker/login-action@v3
#        with:
#          registry: ${{ secrets.DOCKER_HOME_HOST }}
#          username: ${{ secrets.DOCKER_HOME_LOGIN }}
#          password: ${{ secrets.DOCKER_HOME_PASSWORD }}
#
#      - name: Download artifact
#        uses: actions/download-artifact@v4
#        with:
#          pattern: image-*
#          merge-multiple: true
#          path: ${{ runner.temp }}
#
#      - name: Load image
#        run: |
#          find ${{ runner.temp }} -type f -name "image-*.tar" -exec docker load --input {} \;
#          docker push -a ${{ env.IMAGE_NAME }}